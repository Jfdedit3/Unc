-- RTRIX.lua - Librairie améliorée
local RTRIX = {
    name = "RTRIX UI",
    version = "2.0",
    author = "RTRIX Team"
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Configuration
RTRIX.config = {
    -- Aimbot
    AimbotEnabled = false,
    AimAssist = false,
    WallCheck = false,
    TeamCheck = false,
    ShowFOV = false,
    FOV = 100,
    TargetPart = "Head",
    AimAssistSmoothness = 50,
    
    -- ESP
    ESPEnabled = false,
    ESPTeamCheck = false,
    Tracers = false,
    TracersTeamCheck = false,
    ESPColor = Color3.fromRGB(255, 0, 0),
    FOVColor = Color3.fromRGB(0, 255, 0),
    
    -- Golden Knife
    GoldenKnifeEnemy = false,
    GoldenKnifeRandom = false,
    GoldenKnifeBehind = false,
    
    -- Player
    PlayerWalkSpeedEnabled = false,
    PlayerWalkSpeed = 16,
    PlayerJumpPower = 50,
    PlayerInfJumpEnabled = false,
    
    -- Others
    HitboxExpander = false,
    HitboxSize = 0,
    TeamCheckHitbox = false,
    NoCollision = false,
    BotDetection = false,
}

-- UI Elements
RTRIX.ui = {}
RTRIX.windows = {}

-- Utility Functions
function RTRIX.round(num, dp)
    local mult = 10^(dp or 0)
    return math.floor(num * mult + 0.5) / mult
end

function RTRIX.clamp(value, min, max)
    return math.min(math.max(value, min), max)
end

function RTRIX.randomColor()
    return Color3.new(math.random(), math.random(), math.random())
end

-- UI Creation Functions
function RTRIX.createWindow(title, size, position)
    local windowId = #RTRIX.windows + 1
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RTRIX_Window_" .. windowId
    screenGui.ResetOnSpawn = false
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, size.X, 0, size.Y)
    mainFrame.Position = position or UDim2.new(0.5, -size.X/2, 0.5, -size.Y/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 25)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -50, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "RTRIX Window"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 14
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar
    
    -- Close Button
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 25, 1, 0)
    closeButton.Position = UDim2.new(1, -25, 0, 0)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 14
    closeButton.Parent = titleBar
    
    -- Content Area
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, 0, 1, -25)
    contentFrame.Position = UDim2.new(0, 0, 0, 25)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame
    
    local layout = Instance.new("UIListLayout")
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 5)
    layout.Parent = contentFrame
    
    -- Store window reference
    local window = {
        id = windowId,
        gui = screenGui,
        frame = mainFrame,
        content = contentFrame,
        elements = {}
    }
    
    table.insert(RTRIX.windows, window)
    
    -- Close functionality
    closeButton.MouseButton1Click:Connect(function()
        window.gui:Destroy()
        for i, win in ipairs(RTRIX.windows) do
            if win.id == windowId then
                table.remove(RTRIX.windows, i)
                break
            end
        end
    end)
    
    return window
end

function RTRIX.addElement(window, element)
    element.Parent = window.content
    table.insert(window.elements, element)
    return element
end

function RTRIX.Label(window, text)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 20)
    label.Position = UDim2.new(0, 5, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text or ""
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    return RTRIX.addElement(window, label)
end

function RTRIX.Toggle(window, text, configKey)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -10, 0, 25)
    btn.Position = UDim2.new(0, 5, 0, 0)
    btn.Text = text .. (RTRIX.config[configKey] and " [ON]" or " [OFF]")
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 12
    btn.BackgroundColor3 = RTRIX.config[configKey] and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    
    btn.MouseButton1Click:Connect(function()
        RTRIX.config[configKey] = not RTRIX.config[configKey]
        btn.Text = text .. (RTRIX.config[configKey] and " [ON]" or " [OFF]")
        btn.BackgroundColor3 = RTRIX.config[configKey] and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    end)
    
    return RTRIX.addElement(window, btn)
end

function RTRIX.Slider(window, text, configKey, min, max)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -10, 0, 45)
    frame.BackgroundTransparency = 1
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 15)
    label.BackgroundTransparency = 1
    label.Text = text .. ": " .. tostring(RTRIX.config[configKey])
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.Parent = frame
    
    local slider = Instance.new("TextBox")
    slider.Size = UDim2.new(1, 0, 0, 20)
    slider.Position = UDim2.new(0, 0, 0, 25)
    slider.PlaceholderText = "Valeur (" .. min .. "-" .. max .. ")"
    slider.Text = tostring(RTRIX.config[configKey])
    slider.TextColor3 = Color3.new(1, 1, 1)
    slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    slider.Font = Enum.Font.Gotham
    slider.TextSize = 12
    slider.Parent = frame
    
    slider.FocusLost:Connect(function()
        local value = tonumber(slider.Text)
        if value then
            RTRIX.config[configKey] = RTRIX.clamp(value, min, max)
            label.Text = text .. ": " .. tostring(RTRIX.config[configKey])
            slider.Text = tostring(RTRIX.config[configKey])
        else
            slider.Text = tostring(RTRIX.config[configKey])
        end
    end)
    
    frame.Parent = window.content
    return frame
end

function RTRIX.Button(window, text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -10, 0, 25)
    btn.Position = UDim2.new(0, 5, 0, 0)
    btn.Text = text
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 12
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    
    if callback then
        btn.MouseButton1Click:Connect(callback)
    end
    
    return RTRIX.addElement(window, btn)
end

function RTRIX.ColorPicker(window, text, configKey)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -10, 0, 25)
    btn.Position = UDim2.new(0, 5, 0, 0)
    btn.Text = text
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 12
    btn.BackgroundColor3 = RTRIX.config[configKey]
    
    btn.MouseButton1Click:Connect(function()
        RTRIX.config[configKey] = RTRIX.randomColor()
        btn.BackgroundColor3 = RTRIX.config[configKey]
    end)
    
    return RTRIX.addElement(window, btn)
end

-- Game Functions
function RTRIX.getRandomEnemy()
    local enemies = {}
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Team ~= LocalPlayer.Team and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(enemies, plr)
        end
    end
    if #enemies > 0 then return enemies[math.random(1, #enemies)] end
end

function RTRIX.getRandomPlayer()
    local pool = {}
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(pool, plr)
        end
    end
    if #pool > 0 then return pool[math.random(1, #pool)] end
end

function RTRIX.teleportTo(pos)
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = CFrame.new(pos)
    end
end

function RTRIX.teleportBehind(targetPlr)
    if not targetPlr or not targetPlr.Character or not targetPlr.Character:FindFirstChild("HumanoidRootPart") then return end
    local hrp = targetPlr.Character.HumanoidRootPart
    local backOffset = hrp.CFrame.LookVector * -3
    local behindPos = hrp.Position + backOffset + Vector3.new(0, 1, 0)
    RTRIX.teleportTo(behindPos)
end

-- Main Loop
function RTRIX.startMainLoop()
    -- Golden Knife Loop
    spawn(function()
        while wait(0.5) do
            if RTRIX.config.GoldenKnifeEnemy then
                local enemy = RTRIX.getRandomEnemy()
                if enemy then
                    RTRIX.teleportTo(enemy.Character.HumanoidRootPart.Position + Vector3.new(0, 2, 0))
                end
            end
            
            if RTRIX.config.GoldenKnifeRandom then
                local target = RTRIX.getRandomPlayer()
                if target then
                    RTRIX.teleportTo(target.Character.HumanoidRootPart.Position + Vector3.new(0, 2, 0))
                end
            end
            
            if RTRIX.config.GoldenKnifeBehind then
                local enemy = RTRIX.getRandomEnemy()
                if enemy then
                    RTRIX.teleportBehind(enemy)
                end
            end
        end
    end)
    
    -- Render Loop
    RunService.RenderStepped:Connect(function()
        -- Add your render logic here (ESP, Aimbot, etc.)
    end)
end

-- Initialize
function RTRIX.init()
    -- Create main window
    local mainWindow = RTRIX.createWindow("⚡ RTRIX UI BETA", Vector2.new(300, 500))
    
    -- Add UI elements
    RTRIX.Label(mainWindow, "=== AIMBOT ===")
    RTRIX.Toggle(mainWindow, "Aim Assist", "AimAssist")
    RTRIX.Toggle(mainWindow, "Wall Check", "WallCheck")
    RTRIX.Toggle(mainWindow, "Team Check", "TeamCheck")
    RTRIX.Toggle(mainWindow, "Show FOV", "ShowFOV")
    RTRIX.Slider(mainWindow, "FOV", "FOV", 1, 1000)
    RTRIX.Slider(mainWindow, "Smoothness", "AimAssistSmoothness", 1, 100)
    
    RTRIX.Label(mainWindow, "=== ESP ===")
    RTRIX.Toggle(mainWindow, "ESP", "ESPEnabled")
    RTRIX.Toggle(mainWindow, "ESP Team Check", "ESPTeamCheck")
    RTRIX.Toggle(mainWindow, "Tracers", "Tracers")
    RTRIX.ColorPicker(mainWindow, "ESP Color", "ESPColor")
    RTRIX.ColorPicker(mainWindow, "FOV Color", "FOVColor")
    
    RTRIX.Label(mainWindow, "=== PLAYER ===")
    RTRIX.Toggle(mainWindow, "Walk Speed", "PlayerWalkSpeedEnabled")
    RTRIX.Slider(mainWindow, "Walk Speed", "PlayerWalkSpeed", 1, 300)
    RTRIX.Slider(mainWindow, "Jump Power", "PlayerJumpPower", 1, 300)
    RTRIX.Toggle(mainWindow, "Infinite Jump", "PlayerInfJumpEnabled")
    
    RTRIX.Label(mainWindow, "=== GOLDEN KNIFE ===")
    RTRIX.Toggle(mainWindow, "Enemy Teleport", "GoldenKnifeEnemy")
    RTRIX.Toggle(mainWindow, "Random Teleport", "GoldenKnifeRandom")
    RTRIX.Toggle(mainWindow, "Behind Teleport", "GoldenKnifeBehind")
    
    RTRIX.Label(mainWindow, "=== OTHERS ===")
    RTRIX.Toggle(mainWindow, "Hitbox Expander", "HitboxExpander")
    RTRIX.Slider(mainWindow, "Hitbox Size", "HitboxSize", 0, 100)
    RTRIX.Toggle(mainWindow, "Team Check Hitbox", "TeamCheckHitbox")
    RTRIX.Toggle(mainWindow, "No Collision", "NoCollision")
    RTRIX.Toggle(mainWindow, "Bot Detection", "BotDetection")
    
    -- Start main loop
    RTRIX.startMainLoop()
    
    return mainWindow
end

return RTRIX